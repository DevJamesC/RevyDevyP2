jobs:
    build:
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: dotnet build
    
    test:
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
  
    analyze:
      needs: [build, test]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: git fetch --unshallow
        - run: dotnet tool install --global dotnet-sonarscanner
        - run: | 
            dotnet sonarscanner begin -o:'droptophop' -k:'droptophop_RevyDevyP2' -d:sonar.login="d1eeb6dbaaba45e39a73bfe797967c066d30fa8a" -d:sonar.host.url='https://sonarcloud.io/'
            dotnet build
            dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
            dotnet sonarscanner end -d:sonar.login='d1eeb6dbaaba45e39a73bfe797967c066d30fa8a'
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    package:
      env:
        DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      needs: [analyze]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: docker login --username ${DOCKER_LOGIN} --password ${DOCKER_TOKEN}
        - run: docker image build -f dockerfile -t stockjock .
        - run: docker image tag stockjock hdhopson/stockjock
        - run: docker image push hdhopson/stockjock
        - run: docker logout
  
    # deploy:
  
name: cibuild
  
on: push
